{\rtf1\ansi\ansicpg1252\cocoartf1187
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 Application Structure explanation:\
\
The application is structured around a model-view-controller design pattern. The activities and fragments acts as views where the graphics are displayed and user input is handled. The controller receives relevant user input and uses it to change the model. The model then stores all data in the database. When the model is updated, the view is noticed and updated accordingly.\
\
HostActivity is the host of all fragments which the user can browse through using the action bar in the host activity. Most fragments has their own controller that speaks with its corresponding model. The account class is where the model is store in the database, as such all data that is to be saved needs to be added to Account.}